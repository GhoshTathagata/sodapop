#!/usr/bin/env python

'SPLIT-M1M2 -- split posterior samples in (m1,m2) into separate files for m1 and m2'
__usage__ = 'split-m1m2 samples.csv [-c m1 m2 -o /path/to/output.csv -v]'
__author__ = 'Philippe Landry (pgjlandry@gmail.com)'
__date__ = '02-2021'

from argparse import ArgumentParser
import numpy as np
import os
import sodapop.priors as priors

parser = ArgumentParser(description=__doc__)
parser.add_argument('data')
parser.add_argument('-d', '--delim', help='delimiter for data file, DEFAULT=","', default=',')
parser.add_argument('-c', '--cols', help='name of mass1, mass2 columns to use, DEFAULT="m1 m2"', default=['m1','m2'], nargs=2)
parser.add_argument('-o', '--outpath', help='path for output reweighted samples, DEFAULT=AUTO', default=False)
parser.add_argument('-v', '--verbose', action='store_true', default=False)
args = parser.parse_args()

if args.outpath: out_path = args.outpath
else: out_path = os.path.dirname(args.data)+'/'+os.path.basename(args.data)

# load posterior samples

post_data = np.genfromtxt(args.data,names=True,dtype=None,delimiter=args.delim)
cols = post_data.dtype.names
if args.verbose: print(cols)

m1_col = args.cols[0]
m2_col = args.cols[1]

samples1 = np.column_stack([post_data[col] for col in cols if col != m2_col])
samples2 = np.column_stack([post_data[col] for col in cols if col != m1_col])

# save separate posteriors

col_names1 = ','.join([col for col in cols if col != m2_col]).replace(m1_col,'m')
col_names2 = ','.join([col for col in cols if col != m1_col]).replace(m2_col,'m')
np.savetxt(out_path.split('.csv')[0]+'-m1.csv',samples1,header=col_names1,comments='',delimiter=',')
np.savetxt(out_path.split('.csv')[0]+'-m2.csv',samples2,header=col_names2,comments='',delimiter=',')
